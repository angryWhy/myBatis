<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这是一个mapper xml文件-->
<!--该文件可以实现对应的接口的方法-->
<!--namespace指定xml文件对应哪个接口-->
<mapper namespace="Mapper.MonsterMapper">
    <!--    if使用-->
    <select id="findMonsterByAge" resultType="entity.Monster" parameterType="Integer">
        SELECT * FROM `monster` WHERE 1 = 1
        <if test="age >= 0">
            AND age >#{age}
        </if>
    </select>
    <!--    选择条件-->
    <select id="findAllMonster" resultType="entity.Monster" parameterType="entity.Monster">
        SELECT * FROM `monster`
        <where>
            <if test="id >= 0">
                AND `id` > #{id}
            </if>
            <if test="name!=null and name !=''">
                AND `name` = #{name}
            </if>
        </where>
    </select>
    <!--    chose选择-->
    <select id="findMonsterByIdOrName" resultType="entity.Monster" parameterType="map">
        SELECT * FROM `monster`
        <choose>
            <when test="name !=null and name !=''">
                WHERE `name` = #{name}
            </when>
            <when test="id > 0">
                WHERE `id` > #{id}
            </when>
            <otherwise>
                WHERE `salary` > 100
            </otherwise>
        </choose>
    </select>
    <!--    forEach, SELECT * FROM `monster` WHERE id IN(9,12,15)-->
    <!--    item就是每次取出的值，open对应的就是 IN(9,12,15)，separator就是遍历出来的值多个值得分隔符号，close对应就是sql语句最后的)-->
    <!--    #{id}对应的就是item的id-->
    <select id="findMonsterByIdForeach" resultType="entity.Monster" parameterType="map">
        SELECT * FROM `monster`
        <if test="ids !=null and ids != ''">
            <where>
                id IN
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </where>
        </if>
    </select>

<!--    使用trim替换where条件，and 或者 or 自定义化配置 ，-->
<!--    若子句的开头为 AND 或者 OR去除-->
    <select id="findMonsterByNameTrim" resultType="entity.Monster" parameterType="map">
        SELECT * FROM `monster`

        <trim prefix="WHERE" prefixOverrides="and|or|wzx">
            <if test="name !=null and name != ''">
                wzx `name` = #{name}
            </if>
            <if test="age !=null and age !=''">
                AND `age` > #{age}
            </if>
        </trim>
    </select>
    <update id="updateMonsterBySet" parameterType="map">
        UPDATE `monster`
        <set>
            <if test="age !=null and age!=''">
                `age` = #{age},
            </if>
            <if test="email !=null and email!=''">
                `email` = #{email},
            </if>
            <if test="name !=null and name!=''">
                `name` = #{name},
            </if>
            <if test="salary !=null and salary!=''">
                `salary` = #{salary},
            </if>
            <if test="gender !=null and gender!=''">
                `gender` = #{gender},
            </if>
            <if test="birthday !=null and birthday!=''">
                `birthday` = #{birthday},
            </if>
        </set>
            WHERE `id` = #{id}
    </update>
</mapper>
